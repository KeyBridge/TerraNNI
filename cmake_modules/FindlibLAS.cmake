SET(LIBLAS_ROOTS
	${LIBLAS_ROOT}
	/usr
	/usr/local
	/opt/local
	/opt/csw
	/opt
	/sw
	c:/shared/liblas
	c:/devel/liblas
)

FIND_PATH(LIBLAS_INCLUDE_DIR	liblas/liblas.hpp
	HINTS
		$ENV{LIBLAS_ROOT}
	PATH_SUFFIXES
		include
	PATHS 
		${LIBLAS_ROOTS}
)

SET(LIBLAS_ROOTS ${LIBLAS_INCLUDE_DIR}/../ ${LIBLAS_ROOTS})

FIND_LIBRARY(LIBLAS_LIBRARY
	NAMES
		las
		las_i
		liblas
		liblas_i
	HINTS
		$ENV{LIBLAS_ROOT}
	PATH_SUFFIXES
		lib
	PATHS
		${LIBLAS_ROOTS}
)

FIND_LIBRARY(LIBLAS_LIBRARY_DEBUG
	NAMES
		liblas_d
		libl1as_i
	HINTS
		$ENV{LIBLAS_ROOT}
	PATH_SUFFIXES
		lib
	PATHS
		${LIBLAS_ROOTS}
)

FIND_PATH(LIBLAS_BINARY_DIR
	NAMES 
		lasinfo
		lasinfo.exe
	HINTS
		$ENV{LIBLAS_ROOTS}
	PATH_SUFFIXES
		bin
	PATHS
		${LIBLAS_ROOTS}
		/usr/
		/usr/local
)

if(WIN32)
FIND_FILE(LIBLAS_DLL
	NAMES 
		liblas.dll
	HINTS
		$ENV{LIBLAS_ROOTS}
	PATH_SUFFIXES
		bin
	PATHS
		${LIBLAS_BINARY_DIR}
		$ENV{LIBLAS_ROOTS}
)
endif(WIN32)


IF(LIBLAS_LIBRARY AND LIBLAS_LIBRARY_DEBUG)
	SET(LIBLAS_LIBRARY optimized ${LIBLAS_LIBRARY} debug ${LIBLAS_LIBRARY_DEBUG})
ENDIF(LIBLAS_LIBRARY AND LIBLAS_LIBRARY_DEBUG)

IF (LIBLAS_INCLUDE_DIR AND LIBLAS_LIBRARY AND LIBLAS_BINARY_DIR)
	SET(LIBLAS_FOUND TRUE)
ENDIF (LIBLAS_INCLUDE_DIR AND LIBLAS_LIBRARY AND LIBLAS_BINARY_DIR)


IF (LIBLAS_FOUND)
	IF (NOT LIBLAS_FIND_QUIETLY)
		MESSAGE(STATUS "Found libLAS: ${LIBLAS_LIBRARY}")
	ENDIF (NOT LIBLAS_FIND_QUIETLY)
ELSE (LIBLAS_FOUND)
	IF (LIBLAS_FIND_REQUIRED)
		MESSAGE(FATAL_ERROR "Could not find libLAS")
	ENDIF (LIBLAS_FIND_REQUIRED)
ENDIF (LIBLAS_FOUND)
